buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
	}
}

plugins {
	id 'idea'
}

group 'com.squedgy.mc-mod-manager'
version = this.properties.version
subprojects {

	ext.moduleName = project.properties.moduleName

	apply plugin: 'java'
	apply plugin: 'idea'
	apply plugin: 'io.spring.dependency-management'

	repositories {
		mavenLocal()
		mavenCentral()
	}

	dependencies {
		//JUnit 4 for testing
		testCompile group: 'junit', name: 'junit', version: '4.12'
		//JSON config requires jackson
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.8'
		implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'
		//SLF4J for logging purposes
		implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-beta4'
		implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha4'
		implementation group: 'com.squedgy', name: 'my-utilities', version: '1.0'
	}

	def moduleExists = {
		def check = moduleName
		logger.lifecycle('moduleName: ' + check)
		logger.lifecycle('moduleExists: ' + (check != null && check != ''))
		return check != null && check != ''
	}

	compileJava {
		if(!moduleExists()) {
			throw new IllegalArgumentException("Module Name is NOT declared in properties for " + project.name)
		}
		inputs.property("moduleName", moduleName)
		doFirst {
			options.compilerArgs = [
			    '--module-path', classpath.asPath,
			]
			classpath = files()
		}
	}

	compileTestJava {
		if(!moduleExists()) {
			throw new IllegalArgumentException("Module Name is NOT declared in properties")
		}
		inputs.property('moduleName', moduleName)
		doFirst {
			options.compilerArgs = [
			    '--module-path' , classpath.asPath,
				'--add-modules', 'junit',
				'--add-reads', "${moduleName}=junit",
				'--patch-module', "${moduleName}=${files(sourceSets.test.java.srcDirs).asPath}"
			]
			classpath = files()
		}
	}

	test {
//		useJUnit()
		if(!moduleExists()) {
			throw new IllegalArgumentException("Module Name is NOT declared in properties")
		}
		inputs.property("moduleName", moduleName)
		doFirst {
			jvmArgs = [
				'--module-path', classpath.asPath,
				'--add-modules', 'ALL-MODULE-PATH',
				'--add-reads', "$moduleName=junit",
				'--patch-module', "$moduleName=${files(sourceSets.test.java.outputDir).asPath}:${project.buildDir.toPath().resolve("resources").resolve("test").toAbsolutePath()}"
			]
			classpath = files()
		}
	}

	group 'com.squedgy.mc-mod-manager'
	version = this.properties.version
	sourceCompatibility = 1.12
	targetCompatibility = 1.12

	assemble{
		dependsOn 'clean'
	}

	jar {
		manifest.attributes provider: 'gradle'
		manifest.attributes ('Automatic-Module-Name': '')
		baseName = project.name + '-mmm'
		version = version
	}

	uploadArchives {
		repositories {
			mavenLocal()
		}
	}
}