buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
    }
}

subprojects{

    apply plugin:'java'
    apply plugin:'idea'
    apply plugin: 'io.spring.dependency-management'

    repositories{
        mavenLocal()
        mavenCentral()
    }


        apply plugin: 'io.spring.dependency-management'

        dependencyManagement {
            imports {
                mavenBom 'org.apache.logging.log4j:log4j-bom:2.11.1'
            }
        }

        dependencies{
            //JUnit 5 for testing
            testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.1'
            //JSON config requires jackson
            compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.7'
            compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.7'
            //LOG4J2 for logging purposes
            compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.1'
            compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'
        }

        group 'com.squedgy.mc-mod-manager'
        version="1.0"
        sourceCompatibility = 1.8
        targetCompatibility=1.8

        jar{
            manifest.attributes provider: 'gradle'
            baseName = 'mc-mod-manager-' + project.name
            version = version
        }

        task fatJar(type: Jar){
            manifest{
                attributes(
                        'Implementation-Title': 'All Projects Jar',
                        'Implementation-Version':version,
                )
                if (!mainClass.isEmpty()){
                    attributes 'Main-Class' : mainClass
                }
            }
            baseName = project.name + "-all"
            from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it)}}
            with jar
        }

        uploadArchives{
            repositories{
                mavenLocal()
            }
        }
    }

